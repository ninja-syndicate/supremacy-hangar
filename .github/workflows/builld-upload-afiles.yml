name: Build and Upload Supremacy Hangar

on:
    workflow_dispatch: {}

env:
    UNITY_LICENSE: ${{ secrets.UNITY_LICENSE}}

jobs:
    build-upload:
        runs-on: ubuntu-20.04
        steps:
            # Checkout without LFS
            - name: Checkout Repository
              uses: actions/checkout@v2
                fetch-depth: 0

            # Git LFS
            - name: Create LFS File List
              run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

            - name: Restore LFS Cache
              uses: actions/cache@v2
              id: lfs-cache
              with:
                path: .git/lfs
                key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

            - name: Git LFS Pull
              run: |
                git lfs pull
                git add .
                git reset --hard

            # Cache
            - uses: actions/cache@v2
              with:
                path: Library
                key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
                restore-keys: |
                  Library-

            # Test
            - name: Run Tests
              uses: game-ci/unity-test-runner@v2
              env:
                UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
              with:
                unityVersion: 2021.3.4f1
                githubToken: ${{secrets.GITHUB_TOKEN}}

            # Build
            - name: Build Project
              uses: game-ci/unity-builder@v2
              env:
                UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
                UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
                UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
              with:
                unityVersion: 2021.3.4f1
                targetPlatform: WebGL

            # Zip Build
            - name: Zip Build
              run: |
                pushd build/WebGL
                zip -r ../../build-v${{ github.run_number }}.zip .
                popd
            
            
            # SSH Setup
            - name: Setup SSH
              run: |
                mkdir -p ~/.ssh
                echo -e "Host ${{ secrets.AFILES_SSH_HOST }}\n  User ${{ secrets.AFILES_SSH_USER }}\n  Port ${{ secrets.AFILES._SSH_PORT }}" >> ~/.ssh/config
                echo '${{ secrets.AFILES_SSH_KNOWN_HOSTS }}' > ~/.ssh/known_hosts
                echo '${{ secrets.AFILES_SSH_PRIVATE_KEY }}' > ~/.ssh/id_ed25519
                chmod 600 ~/.ssh/id_ed25519

            # Rsync to server   
            - name: Rsync to AFILES.NINJA
              run: rsync -av ./build-v${{ github.run_number }}.zip ${{ secrets.AFILES_SSH_HOST }}:/var/www/html/supremacy-hangar/ 



