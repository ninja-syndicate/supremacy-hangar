# This is a basic workflow to help you get started with Actions

name: build-deploy-testapp

# Controls when the workflow will run
on:
    # Triggers the workflow on push or pull request events but only for the "develop" branch
    push:
        branches: ["develop", "github-actions"]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: [self-hosted]
        strategy:
            fail-fast: false
            matrix:
                unityVersion:
                    - 2021.3.4f1
                targetPlatform:
                    - WebGL

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # give extra previlege to the runner
            # - name: Extra previlege
            #   run: |
            #       $ServiceName = (Get-Service actions.runner.*).name
            #       $CmdLine = 'sc.exe config $ServiceName obj= "NT AUTHORITY\SYSTEM" type= own'
            #       Execute-Command -Command $CmdLine

            # support longpaths
            # - name: Support longpaths
            #   run: |
            #       git config --system core.longpaths true | cmd as

            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  lfs: true

            # build Unity
            - name: Build Unity project
              run: |
                  Set-Location -Path 'C:\actions-runner\_work\supremacy-hangar\supremacy-hangar'
                  $UnityExePath = 'C:\Program Files\Unity\Hub\Editor\2021.3.4f1\Editor\Unity.exe'
                  $PrewarmArgs =  '-batchmode -quit -buildTarget WebGL -projectPath 'C:\actions-runner\_work\supremacy-hangar\supremacy-hangar' -logFile prewarmLog.txt -executeMethod BuildSystem.CLI.PreWarm -wait'
                  $BuildArgs =  '-batchmode -quit -buildTarget WebGL -projectPath 'C:\actions-runner\_work\supremacy-hangar\supremacy-hangar'-logFile buildLog.txt -executeMethod BuildSystem.CLI.BuildWebGL -development -wait'
                  Start-Process -FilePath $UnityExePath -ArgumentList $PrewarmArgs
                  Start-Process -FilePath $UnityExePath -ArgumentList $BuildArgs

            # upload build
